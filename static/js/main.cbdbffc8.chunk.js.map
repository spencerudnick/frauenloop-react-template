{"version":3,"sources":["components/TodoList.jsx","App.jsx","index.jsx"],"names":["TodoList","state","input","todos","handleSubmit","e","preventDefault","editedTodos","trim","push","content","setState","onChange","target","value","handleDelete","indexToDelete","splice","onSubmit","this","type","map","item","index","key","className","onClick","Component","App","React","ReactDOM","render","document","getElementById"],"mappings":"+PAqFeA,E,2MAlFbC,MAAQ,CACNC,MAAO,GACPC,MAAO,I,EAKTC,aAAe,SAAAC,GACbA,EAAEC,iBAGF,IAAMC,EAAW,YAAO,EAAKN,MAAME,OAEH,KAA5B,EAAKF,MAAMC,MAAMM,SAEnBD,EAAYE,KAAK,CAAEC,QAAS,EAAKT,MAAMC,MAAMM,SAG7C,EAAKG,SAAS,CACZR,MAAOI,EACPL,MAAO,O,EAKbU,SAAW,SAAAP,GACT,EAAKM,SAAS,CACZT,MAAOG,EAAEQ,OAAOC,S,EAIpBC,aAAe,SAACC,GAId,IAAMT,EAAW,YAAO,EAAKN,MAAME,OAEnCI,EAAYU,OAAOD,EAAe,GASlC,EAAKL,SAAS,CACZR,MAAOI,K,wEAID,IAAD,OACP,OACE,oCACE,0BAAMW,SAAUC,KAAKf,cACnB,2BACEgB,KAAK,OACLN,MAAOK,KAAKlB,MAAMC,MAClBU,SAAUO,KAAKP,WAEjB,8CAEF,4BACGO,KAAKlB,MAAME,MAAMkB,KAAI,SAACC,EAAMC,GAAP,OACpB,wBAAIC,IAAKD,GAAQD,EAAKZ,QACpB,0BAAMe,UAAU,oBACd,4BACEL,KAAK,SACLK,UAAU,SACVC,QAAS,WACP,EAAKX,aAAaQ,KAJtB,gB,GAnEOI,aCaRC,E,iLATX,OACE,8BACE,yCACA,kBAAC,EAAD,W,GANUC,IAAMF,WCExBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.cbdbffc8.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TodoList extends Component {\n  state = {\n    input: \"\",\n    todos: [\n\n    ]\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    // copy todo list\n    const editedTodos = [...this.state.todos];\n\n    if (this.state.input.trim() !== '') {\n      // add a new todo to the list\n      editedTodos.push({ content: this.state.input.trim() });\n\n      // save the updated list and reset `input`\n      this.setState({\n        todos: editedTodos,\n        input: ''\n      });\n    }\n  };\n\n  onChange = e => {\n    this.setState({\n      input: e.target.value\n    });\n  };\n\n  handleDelete = (indexToDelete) => {\n\n    // METHOD 1\n    // copy todo list\n    const editedTodos = [...this.state.todos];\n    // splice the index of the clicked item\n    editedTodos.splice(indexToDelete, 1);\n\n    // METHOD 2\n    // make a copy of the todo list, but without the clicked item\n    // const editedTodos = this.state.todos.filter((item, index) => {\n    //   return indexToDelete !== index;\n    // });\n\n    // save the updated todo list to state\n    this.setState({\n      todos: editedTodos\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            value={this.state.input}\n            onChange={this.onChange}\n          ></input>\n          <button>save todo</button>\n        </form>\n        <ul>\n          {this.state.todos.map((item, index) => (\n            <li key={index}>{item.content}\n              <span className=\"delete-container\">\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  onClick={() => {\n                    this.handleDelete(index);\n                  }}>X</button>\n              </span>\n            </li>\n          ))}\n        </ul>\n\n      </>\n    );\n  }\n}\n\nexport default TodoList;","import React from \"react\";\nimport TodoList from \"./components/TodoList\";\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <main>\n        <h1>Todo List</h1>\n        <TodoList />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}